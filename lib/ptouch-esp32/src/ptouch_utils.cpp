#include "ptouch_esp32.h"
#include <Arduino.h>

// Media type strings (ported from original library)
const char* pt_mediatype_string(uint8_t media_type) {
    switch (media_type) {
        case 0x00: return "No media";
        case 0x01: return "Laminated tape";
        case 0x03: return "Non-laminated tape";
        case 0x04: return "Fabric tape";
        case 0x11: return "Heat-shrink tube";
        case 0x12: return "FLe label";
        case 0x17: return "Incompatible tape";
        case 0x21: return "Continuous length tape";
        case 0x22: return "Die-cut labels";
        case 0x23: return "Continuous length tape 2";
        case 0xFF: return "Incompatible tape 2";
        default: return "Unknown";
    }
}

// Tape color strings (ported from original library)
const char* pt_tapecolor_string(uint8_t tape_color) {
    switch (tape_color) {
        case 0x00: return "No tape";
        case 0x01: return "White";
        case 0x02: return "Other";
        case 0x03: return "Clear";
        case 0x04: return "Red";
        case 0x05: return "Blue";
        case 0x06: return "Black";
        case 0x07: return "Yellow";
        case 0x08: return "Green";
        case 0x09: return "Clear (white text)";
        case 0x0A: return "Other (white text)";
        case 0x0B: return "Clear (red text)";
        case 0x0C: return "Clear (blue text)";
        case 0x0D: return "Clear (black text)";
        case 0x0E: return "Clear (yellow text)";
        case 0x0F: return "Clear (green text)";
        case 0x10: return "Tube (white text)";
        case 0x11: return "Tube (red text)";
        case 0x12: return "Tube (blue text)";
        case 0x13: return "Tube (black text)";
        case 0x14: return "Tube (yellow text)";
        case 0x15: return "Tube (green text)";
        case 0x16: return "Tube (clear text)";
        case 0x17: return "Tube (white on clear)";
        case 0x18: return "Tube (red on clear)";
        case 0x19: return "Tube (blue on clear)";
        case 0x1A: return "Tube (black on clear)";
        case 0x1B: return "Tube (yellow on clear)";
        case 0x1C: return "Tube (green on clear)";
        case 0x1D: return "Tube (clear on white)";
        case 0x1E: return "Tube (clear on red)";
        case 0x1F: return "Tube (clear on blue)";
        case 0x20: return "Tube (clear on black)";
        case 0x21: return "Tube (clear on yellow)";
        case 0x22: return "Tube (clear on green)";
        case 0x23: return "Tube (clear on clear)";
        case 0x24: return "Tube (incompatible)";
        case 0x25: return "Stencil tape";
        case 0x30: return "Incompatible";
        case 0x31: return "Cleaning";
        case 0x32: return "Stencil";
        case 0x33: return "Other";
        case 0x34: return "Incompatible";
        case 0x35: return "Incompatible";
        case 0x36: return "Incompatible";
        case 0x37: return "Incompatible";
        case 0x38: return "Incompatible";
        case 0x39: return "Incompatible";
        case 0x3A: return "Incompatible";
        case 0x3B: return "Incompatible";
        case 0x3C: return "Incompatible";
        case 0x3D: return "Incompatible";
        case 0x3E: return "Incompatible";
        case 0x3F: return "Incompatible";
        case 0x40: return "Silver";
        case 0x41: return "Gold";
        case 0x42: return "Navy";
        case 0x43: return "Green";
        case 0x44: return "Orange";
        case 0x45: return "Pink";
        case 0x46: return "Purple";
        case 0x47: return "Brown";
        case 0x48: return "Olive";
        case 0x49: return "Light blue";
        case 0x4A: return "Light green";
        case 0x4B: return "Light orange";
        case 0x4C: return "Light pink";
        case 0x4D: return "Light purple";
        case 0x4E: return "Light brown";
        case 0x4F: return "Light olive";
        case 0x50: return "Pearl white";
        case 0x51: return "Pearl pink";
        case 0x52: return "Pearl blue";
        case 0x53: return "Pearl green";
        case 0x54: return "Pearl yellow";
        case 0x55: return "Pearl orange";
        case 0x56: return "Pearl red";
        case 0x57: return "Pearl purple";
        case 0x58: return "Pearl brown";
        case 0x59: return "Pearl black";
        case 0x5A: return "Pearl olive";
        case 0x5B: return "Pearl light blue";
        case 0x5C: return "Pearl light green";
        case 0x5D: return "Pearl light orange";
        case 0x5E: return "Pearl light pink";
        case 0x5F: return "Pearl light purple";
        case 0x60: return "Pearl light brown";
        case 0x61: return "Pearl light olive";
        case 0x62: return "Satin silver";
        case 0x63: return "Satin gold";
        case 0x64: return "Satin navy";
        case 0x65: return "Satin green";
        case 0x66: return "Satin orange";
        case 0x67: return "Satin pink";
        case 0x68: return "Satin purple";
        case 0x69: return "Satin brown";
        case 0x6A: return "Satin olive";
        case 0x6B: return "Satin light blue";
        case 0x6C: return "Satin light green";
        case 0x6D: return "Satin light orange";
        case 0x6E: return "Satin light pink";
        case 0x6F: return "Satin light purple";
        case 0x70: return "Satin light brown";
        case 0x71: return "Satin light olive";
        case 0x72: return "Pastel blue";
        case 0x73: return "Pastel green";
        case 0x74: return "Pastel orange";
        case 0x75: return "Pastel pink";
        case 0x76: return "Pastel purple";
        case 0x77: return "Pastel brown";
        case 0x78: return "Pastel olive";
        case 0x79: return "Pastel light blue";
        case 0x7A: return "Pastel light green";
        case 0x7B: return "Pastel light orange";
        case 0x7C: return "Pastel light pink";
        case 0x7D: return "Pastel light purple";
        case 0x7E: return "Pastel light brown";
        case 0x7F: return "Pastel light olive";
        case 0x80: return "Premium white";
        case 0x81: return "Premium silver";
        case 0x82: return "Premium gold";
        case 0x83: return "Premium navy";
        case 0x84: return "Premium green";
        case 0x85: return "Premium orange";
        case 0x86: return "Premium pink";
        case 0x87: return "Premium purple";
        case 0x88: return "Premium brown";
        case 0x89: return "Premium olive";
        case 0x8A: return "Premium light blue";
        case 0x8B: return "Premium light green";
        case 0x8C: return "Premium light orange";
        case 0x8D: return "Premium light pink";
        case 0x8E: return "Premium light purple";
        case 0x8F: return "Premium light brown";
        case 0x90: return "Premium light olive";
        case 0x91: return "Premium red";
        case 0x92: return "Premium blue";
        case 0x93: return "Premium black";
        case 0x94: return "Premium yellow";
        case 0x95: return "Premium clear";
        case 0x96: return "Premium white on clear";
        case 0x97: return "Premium red on clear";
        case 0x98: return "Premium blue on clear";
        case 0x99: return "Premium black on clear";
        case 0x9A: return "Premium yellow on clear";
        case 0x9B: return "Premium green on clear";
        case 0x9C: return "Premium clear on white";
        case 0x9D: return "Premium clear on red";
        case 0x9E: return "Premium clear on blue";
        case 0x9F: return "Premium clear on black";
        case 0xA0: return "Premium clear on yellow";
        case 0xA1: return "Premium clear on green";
        case 0xA2: return "Premium matte white";
        case 0xA3: return "Premium matte silver";
        case 0xA4: return "Premium matte clear";
        case 0xA5: return "Premium matte white on clear";
        case 0xA6: return "Premium matte clear on white";
        case 0xA7: return "Premium matte clear on black";
        case 0xA8: return "Premium matte clear on red";
        case 0xA9: return "Premium matte clear on blue";
        case 0xAA: return "Premium matte clear on yellow";
        case 0xAB: return "Premium matte clear on green";
        case 0xAC: return "Premium matte clear on orange";
        case 0xAD: return "Premium matte clear on pink";
        case 0xAE: return "Premium matte clear on purple";
        case 0xAF: return "Premium matte clear on brown";
        case 0xB0: return "Premium matte clear on olive";
        case 0xB1: return "Premium matte clear on light blue";
        case 0xB2: return "Premium matte clear on light green";
        case 0xB3: return "Premium matte clear on light orange";
        case 0xB4: return "Premium matte clear on light pink";
        case 0xB5: return "Premium matte clear on light purple";
        case 0xB6: return "Premium matte clear on light brown";
        case 0xB7: return "Premium matte clear on light olive";
        case 0xB8: return "Premium matte clear on navy";
        case 0xB9: return "Premium matte clear on green";
        case 0xBA: return "Premium matte clear on orange";
        case 0xBB: return "Premium matte clear on pink";
        case 0xBC: return "Premium matte clear on purple";
        case 0xBD: return "Premium matte clear on brown";
        case 0xBE: return "Premium matte clear on olive";
        case 0xBF: return "Premium matte clear on light blue";
        case 0xC0: return "Premium matte clear on light green";
        case 0xC1: return "Premium matte clear on light orange";
        case 0xC2: return "Premium matte clear on light pink";
        case 0xC3: return "Premium matte clear on light purple";
        case 0xC4: return "Premium matte clear on light brown";
        case 0xC5: return "Premium matte clear on light olive";
        case 0xC6: return "Premium matte clear on pearl white";
        case 0xC7: return "Premium matte clear on pearl pink";
        case 0xC8: return "Premium matte clear on pearl blue";
        case 0xC9: return "Premium matte clear on pearl green";
        case 0xCA: return "Premium matte clear on pearl yellow";
        case 0xCB: return "Premium matte clear on pearl orange";
        case 0xCC: return "Premium matte clear on pearl red";
        case 0xCD: return "Premium matte clear on pearl purple";
        case 0xCE: return "Premium matte clear on pearl brown";
        case 0xCF: return "Premium matte clear on pearl black";
        case 0xD0: return "Premium matte clear on pearl olive";
        case 0xD1: return "Premium matte clear on pearl light blue";
        case 0xD2: return "Premium matte clear on pearl light green";
        case 0xD3: return "Premium matte clear on pearl light orange";
        case 0xD4: return "Premium matte clear on pearl light pink";
        case 0xD5: return "Premium matte clear on pearl light purple";
        case 0xD6: return "Premium matte clear on pearl light brown";
        case 0xD7: return "Premium matte clear on pearl light olive";
        case 0xD8: return "Premium matte clear on satin silver";
        case 0xD9: return "Premium matte clear on satin gold";
        case 0xDA: return "Premium matte clear on satin navy";
        case 0xDB: return "Premium matte clear on satin green";
        case 0xDC: return "Premium matte clear on satin orange";
        case 0xDD: return "Premium matte clear on satin pink";
        case 0xDE: return "Premium matte clear on satin purple";
        case 0xDF: return "Premium matte clear on satin brown";
        case 0xE0: return "Premium matte clear on satin olive";
        case 0xE1: return "Premium matte clear on satin light blue";
        case 0xE2: return "Premium matte clear on satin light green";
        case 0xE3: return "Premium matte clear on satin light orange";
        case 0xE4: return "Premium matte clear on satin light pink";
        case 0xE5: return "Premium matte clear on satin light purple";
        case 0xE6: return "Premium matte clear on satin light brown";
        case 0xE7: return "Premium matte clear on satin light olive";
        case 0xE8: return "Premium matte clear on pastel blue";
        case 0xE9: return "Premium matte clear on pastel green";
        case 0xEA: return "Premium matte clear on pastel orange";
        case 0xEB: return "Premium matte clear on pastel pink";
        case 0xEC: return "Premium matte clear on pastel purple";
        case 0xED: return "Premium matte clear on pastel brown";
        case 0xEE: return "Premium matte clear on pastel olive";
        case 0xEF: return "Premium matte clear on pastel light blue";
        case 0xF0: return "Premium matte clear on pastel light green";
        case 0xF1: return "Premium matte clear on pastel light orange";
        case 0xF2: return "Premium matte clear on pastel light pink";
        case 0xF3: return "Premium matte clear on pastel light purple";
        case 0xF4: return "Premium matte clear on pastel light brown";
        case 0xF5: return "Premium matte clear on pastel light olive";
        case 0xF6: return "Premium matte clear on premium white";
        case 0xF7: return "Premium matte clear on premium silver";
        case 0xF8: return "Premium matte clear on premium gold";
        case 0xF9: return "Premium matte clear on premium navy";
        case 0xFA: return "Premium matte clear on premium green";
        case 0xFB: return "Premium matte clear on premium orange";
        case 0xFC: return "Premium matte clear on premium pink";
        case 0xFD: return "Premium matte clear on premium purple";
        case 0xFE: return "Premium matte clear on premium brown";
        case 0xFF: return "Premium matte clear on premium olive";
        default: return "Unknown";
    }
}

// Text color strings (ported from original library)
const char* pt_textcolor_string(uint8_t text_color) {
    switch (text_color) {
        case 0x00: return "No text";
        case 0x01: return "White";
        case 0x02: return "Red";
        case 0x03: return "Blue";
        case 0x04: return "Black";
        case 0x05: return "Yellow";
        case 0x06: return "Green";
        case 0x07: return "Clear";
        case 0x08: return "Gold";
        case 0x09: return "Navy";
        case 0x0A: return "Orange";
        case 0x0B: return "Pink";
        case 0x0C: return "Purple";
        case 0x0D: return "Brown";
        case 0x0E: return "Olive";
        case 0x0F: return "Light blue";
        case 0x10: return "Light green";
        case 0x11: return "Light orange";
        case 0x12: return "Light pink";
        case 0x13: return "Light purple";
        case 0x14: return "Light brown";
        case 0x15: return "Light olive";
        case 0x16: return "Silver";
        case 0x20: return "Black (Premium)";
        case 0x21: return "White (Premium)";
        case 0x22: return "Red (Premium)";
        case 0x23: return "Blue (Premium)";
        case 0x24: return "Yellow (Premium)";
        case 0x25: return "Green (Premium)";
        case 0x26: return "Clear (Premium)";
        case 0x27: return "Gold (Premium)";
        case 0x28: return "Navy (Premium)";
        case 0x29: return "Orange (Premium)";
        case 0x2A: return "Pink (Premium)";
        case 0x2B: return "Purple (Premium)";
        case 0x2C: return "Brown (Premium)";
        case 0x2D: return "Olive (Premium)";
        case 0x2E: return "Light blue (Premium)";
        case 0x2F: return "Light green (Premium)";
        case 0x30: return "Light orange (Premium)";
        case 0x31: return "Light pink (Premium)";
        case 0x32: return "Light purple (Premium)";
        case 0x33: return "Light brown (Premium)";
        case 0x34: return "Light olive (Premium)";
        case 0x35: return "Silver (Premium)";
        default: return "Unknown";
    }
}

// Utility functions for the printer class
const char* PtouchPrinter::getMediaType() const {
    return pt_mediatype_string(status ? status->media_type : 0);
}

const char* PtouchPrinter::getTapeColor() const {
    return pt_tapecolor_string(status ? status->tape_color : 0);
}

const char* PtouchPrinter::getTextColor() const {
    return pt_textcolor_string(status ? status->text_color : 0);
} 